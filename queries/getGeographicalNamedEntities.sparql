prefix bibo:   <http://purl.org/ontology/bibo/>
prefix dct:    <http://purl.org/dc/terms/>
prefix dce:    <http://purl.org/dc/elements/1.1/>
prefix fabio:  <http://purl.org/spar/fabio/>
prefix foaf:   <http://xmlns.com/foaf/0.1/>
prefix issapr: <http://data-issa.cirad.fr/property/>
prefix oa:     <http://www.w3.org/ns/oa#>
prefix prov:   <http://www.w3.org/ns/prov#>
prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#>
prefix schema: <http://schema.org/>
prefix xsd:    <http://www.w3.org/2001/XMLSchema#>

prefix gn:          <http://www.geonames.org/ontology#>
prefix wgs84_pos:   <http://www.w3.org/2003/01/geo/wgs84_pos#>

select distinct ?entityUri ?name ?officialName ?latitude ?longitude ?altitude ?alternateName ?nameParentFeature ?nameParentCountry
where {
    # Find the named entities on that article and keep only those in Geonames
    []  a oa:Annotation;
    schema:about <{id}>;   # in all the article, wether in the title, abstract or body
    oa:hasBody ?entityUri.
    FILTER( contains(str(?entityUri), "sws.geonames.org") )

    # Get additional information about the named entities
    ?entityUri
        gn:name         ?name;
        wgs84_pos:lat   ?latitude;
        wgs84_pos:long  ?longitude.
    OPTIONAL { ?entityUri gn:officialName   ?officialName }.
    OPTIONAL { ?entityUri wgs84_pos:alt     ?altitude }.
    OPTIONAL { ?entityUri gn:alternateName  ?alternateName }.
    OPTIONAL { ?entityUri gn:parentCountry  [ gn:name ?nameParentCountry ] }.
    OPTIONAL { ?entityUri gn:parentFeature  [ gn:name ?nameParentFeature ] }.
}